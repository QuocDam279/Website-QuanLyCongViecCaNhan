const Task = require('../models/task');
const Project = require('../models/project'); // ðŸ‘ˆ cáº§n Ä‘á»ƒ tÃ¬m dá»± Ã¡n theo tÃªn

// Táº¡o task má»›i
exports.createTask = async (req, res) => {
  const { title, description, status, project, due_date } = req.body;
  try {
    const task = new Task({ title, description, status, project, due_date });
    await task.save();
    res.status(201).json(task);
  } catch (error) {
    res.status(500).json({ message: 'Lá»—i khi táº¡o task', error });
  }
};

// Láº¥y danh sÃ¡ch task theo project ID (qua query)
exports.getTasksByProject = async (req, res) => {
  const { project } = req.query;
  try {
    const tasks = await Task.find({ project });
    res.json(tasks);
  } catch (error) {
    res.status(500).json({ message: 'Lá»—i khi láº¥y danh sÃ¡ch task', error });
  }
};

// ðŸ‘‰ ThÃªm má»›i: Láº¥y danh sÃ¡ch task theo **tÃªn dá»± Ã¡n**
exports.getTasksByProjectName = async (req, res) => {
  const projectName = req.params.projectName;
  try {
    const project = await Project.findOne({ name: projectName });
    if (!project) {
      return res.status(404).json({ message: `KhÃ´ng tÃ¬m tháº¥y dá»± Ã¡n vá»›i tÃªn "${projectName}"` });
    }
    const tasks = await Task.find({ project: project._id });
    res.json(tasks);
  } catch (error) {
    res.status(500).json({ message: 'Lá»—i khi láº¥y task theo tÃªn dá»± Ã¡n', error });
  }
};

// Cáº­p nháº­t task
exports.updateTask = async (req, res) => {
  try {
    const updated = await Task.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!updated) return res.status(404).json({ message: 'KhÃ´ng tÃ¬m tháº¥y task Ä‘á»ƒ cáº­p nháº­t' });
    res.json(updated);
  } catch (error) {
    res.status(500).json({ message: 'Lá»—i khi cáº­p nháº­t task', error });
  }
};

// XoÃ¡ task
exports.deleteTask = async (req, res) => {
  try {
    await Task.findByIdAndDelete(req.params.id);
    res.json({ message: 'Task Ä‘Ã£ Ä‘Æ°á»£c xoÃ¡' });
  } catch (error) {
    res.status(500).json({ message: 'Lá»—i khi xoÃ¡ task', error });
  }
};
